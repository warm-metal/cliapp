// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: rpc.proto

package session

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *App) Reset() {
	*x = App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use App.ProtoReflect.Descriptor instead.
func (*App) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *App) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type TerminalSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  uint32 `protobuf:"varint,1,opt,name=Width,proto3" json:"Width,omitempty"`
	Height uint32 `protobuf:"varint,2,opt,name=Height,proto3" json:"Height,omitempty"`
}

func (x *TerminalSize) Reset() {
	*x = TerminalSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalSize) ProtoMessage() {}

func (x *TerminalSize) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalSize.ProtoReflect.Descriptor instead.
func (*TerminalSize) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *TerminalSize) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *TerminalSize) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type StdIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App          *App          `protobuf:"bytes,1,opt,name=App,proto3" json:"App,omitempty"`
	Input        []string      `protobuf:"bytes,2,rep,name=Input,proto3" json:"Input,omitempty"`
	TerminalSize *TerminalSize `protobuf:"bytes,3,opt,name=TerminalSize,proto3" json:"TerminalSize,omitempty"`
}

func (x *StdIn) Reset() {
	*x = StdIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StdIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdIn) ProtoMessage() {}

func (x *StdIn) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdIn.ProtoReflect.Descriptor instead.
func (*StdIn) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *StdIn) GetApp() *App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *StdIn) GetInput() []string {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *StdIn) GetTerminalSize() *TerminalSize {
	if x != nil {
		return x.TerminalSize
	}
	return nil
}

type StdOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output []byte `protobuf:"bytes,1,opt,name=Output,proto3" json:"Output,omitempty"`
	Raw    bool   `protobuf:"varint,2,opt,name=Raw,proto3" json:"Raw,omitempty"`
}

func (x *StdOut) Reset() {
	*x = StdOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StdOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdOut) ProtoMessage() {}

func (x *StdOut) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdOut.ProtoReflect.Descriptor instead.
func (*StdOut) Descriptor() ([]byte, []int) {
	return file_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *StdOut) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *StdOut) GetRaw() bool {
	if x != nil {
		return x.Raw
	}
	return false
}

var File_rpc_proto protoreflect.FileDescriptor

var file_rpc_proto_rawDesc = []byte{
	0x0a, 0x09, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x3c, 0x0a,
	0x0c, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x78, 0x0a, 0x05, 0x53,
	0x74, 0x64, 0x49, 0x6e, 0x12, 0x1e, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x52,
	0x03, 0x41, 0x70, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x0c, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x32, 0x0a, 0x06, 0x53, 0x74, 0x64, 0x4f, 0x75, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x61, 0x77, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x52, 0x61, 0x77, 0x32, 0x3d, 0x0a, 0x07, 0x41, 0x70, 0x70,
	0x47, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x68, 0x65, 0x6c,
	0x6c, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x64, 0x49,
	0x6e, 0x1a, 0x0f, 0x2e, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x64, 0x4f,
	0x75, 0x74, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_proto_rawDescOnce sync.Once
	file_rpc_proto_rawDescData = file_rpc_proto_rawDesc
)

func file_rpc_proto_rawDescGZIP() []byte {
	file_rpc_proto_rawDescOnce.Do(func() {
		file_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_proto_rawDescData)
	})
	return file_rpc_proto_rawDescData
}

var file_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rpc_proto_goTypes = []interface{}{
	(*App)(nil),          // 0: session.App
	(*TerminalSize)(nil), // 1: session.TerminalSize
	(*StdIn)(nil),        // 2: session.StdIn
	(*StdOut)(nil),       // 3: session.StdOut
}
var file_rpc_proto_depIdxs = []int32{
	0, // 0: session.StdIn.App:type_name -> session.App
	1, // 1: session.StdIn.TerminalSize:type_name -> session.TerminalSize
	2, // 2: session.AppGate.OpenShell:input_type -> session.StdIn
	3, // 3: session.AppGate.OpenShell:output_type -> session.StdOut
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_rpc_proto_init() }
func file_rpc_proto_init() {
	if File_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StdIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StdOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_proto_goTypes,
		DependencyIndexes: file_rpc_proto_depIdxs,
		MessageInfos:      file_rpc_proto_msgTypes,
	}.Build()
	File_rpc_proto = out.File
	file_rpc_proto_rawDesc = nil
	file_rpc_proto_goTypes = nil
	file_rpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AppGateClient is the client API for AppGate service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppGateClient interface {
	OpenShell(ctx context.Context, opts ...grpc.CallOption) (AppGate_OpenShellClient, error)
}

type appGateClient struct {
	cc grpc.ClientConnInterface
}

func NewAppGateClient(cc grpc.ClientConnInterface) AppGateClient {
	return &appGateClient{cc}
}

func (c *appGateClient) OpenShell(ctx context.Context, opts ...grpc.CallOption) (AppGate_OpenShellClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AppGate_serviceDesc.Streams[0], "/session.AppGate/OpenShell", opts...)
	if err != nil {
		return nil, err
	}
	x := &appGateOpenShellClient{stream}
	return x, nil
}

type AppGate_OpenShellClient interface {
	Send(*StdIn) error
	Recv() (*StdOut, error)
	grpc.ClientStream
}

type appGateOpenShellClient struct {
	grpc.ClientStream
}

func (x *appGateOpenShellClient) Send(m *StdIn) error {
	return x.ClientStream.SendMsg(m)
}

func (x *appGateOpenShellClient) Recv() (*StdOut, error) {
	m := new(StdOut)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AppGateServer is the server API for AppGate service.
type AppGateServer interface {
	OpenShell(AppGate_OpenShellServer) error
}

// UnimplementedAppGateServer can be embedded to have forward compatible implementations.
type UnimplementedAppGateServer struct {
}

func (*UnimplementedAppGateServer) OpenShell(AppGate_OpenShellServer) error {
	return status.Errorf(codes.Unimplemented, "method OpenShell not implemented")
}

func RegisterAppGateServer(s *grpc.Server, srv AppGateServer) {
	s.RegisterService(&_AppGate_serviceDesc, srv)
}

func _AppGate_OpenShell_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AppGateServer).OpenShell(&appGateOpenShellServer{stream})
}

type AppGate_OpenShellServer interface {
	Send(*StdOut) error
	Recv() (*StdIn, error)
	grpc.ServerStream
}

type appGateOpenShellServer struct {
	grpc.ServerStream
}

func (x *appGateOpenShellServer) Send(m *StdOut) error {
	return x.ServerStream.SendMsg(m)
}

func (x *appGateOpenShellServer) Recv() (*StdIn, error) {
	m := new(StdIn)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _AppGate_serviceDesc = grpc.ServiceDesc{
	ServiceName: "session.AppGate",
	HandlerType: (*AppGateServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "OpenShell",
			Handler:       _AppGate_OpenShell_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "rpc.proto",
}
